#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding default
\font_roman CMU Serif
\font_sans CMU Sans Serif
\font_typewriter CMU Typewriter Text
\font_math auto
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format pdf4
\output_sync 1
\output_sync_macro "\synctex=1"
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Final presentation speech"
\pdf_author "Roman Inflianskas"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Предметный указатель
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 2cm
\rightmargin 1.5cm
\bottommargin 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Final presentation speech
\end_layout

\begin_layout Author
Roman Inflianskas
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Paragraph
Slide 1
\end_layout

\begin_layout Standard
Good afternoon, ladies and gentlemen!
\end_layout

\begin_layout Standard
No surprises today.
 My name is Roman Inflianskas.
 And, as you might’ve guessed, I’m your class-mate from the “Computer Software
 and Information Technology” chair of the “Informatics and control systems”
 faculty of the Bauman Moscow State Technical University.
\end_layout

\begin_layout Standard
“I promise that I’ll find classroom #501u in two months!”.
 Have you heard this solemn oath? I bet you have.
 Do you remember looking for the classroom where we had our economics class?
 It was really hard to do! 
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
And because we have already studied economics in the next classroom #502u
 you should remember that finding it was really hard to do.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
Navigation is a very developed direction of a science: it has come a long
 way starting from the rock paintings, through compasses and maps, finishing
 GPS navigators.
 But I didn't find any well established software that would help me locate
 rooms and solve routing problem inside the buildings.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I decided to fix the situation and created a program.
 I named it “Ariadne’s Thread”.
 I’m here to tell you about my indoor navigation program that I wrote as
 a “Step into the future” project.
 After that I will demonstrate my program to you.
 And finally I’ll tell you about some lost opportunities and candy-floss.
\end_layout

\begin_layout Standard
I need 10 minutes to accomplish this goal.
 You are welcome to ask me questions after I finish my talk.
\end_layout

\begin_layout Standard
So off we go!
\end_layout

\begin_layout Section
Body
\end_layout

\begin_layout Paragraph
Slide 2
\end_layout

\begin_layout Standard
To begin with, a few words about my work on this project.
\end_layout

\begin_layout Standard
My goal was to develop a software application that could display a floor
 plan of a building, find it’s different parts (such as rooms, stairs, and
 lifts) and shortcuts between them.
 To demonstrate my program I needed floor plans of this building.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
I started from the domain analysis — the essential part of any serious work.
 I thoroughly studied existing software that was created in this field.
 I've found that most of them are using simple mathematical structure —
 graph and Dijkstra's algorithm for routing.
 I decided to use them too.
\end_layout

\begin_layout Plain Layout
Then I wrote the program in a half of year.
 Aside from writing the program I needed to create floor plans of buildings
 for program testing and demonstrating it.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
I've wanted to use my program for navigation in the main building of the
 Bauman Moscow State Technical University but I cannot get the plan because
 
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Slide 3
\end_layout

\begin_layout Standard
Naturally, I couldn’t create floor plans without any programs.
 That’s why my Guide consists of two programs: Ariadne and Theseus.
 I draw the floor plan with the help of my first program called Ariadne.
 For the end users I created the second program called Theseus.
\end_layout

\begin_layout Paragraph
Slide 4
\end_layout

\begin_layout Standard
On the next slide you can see what my program looks like.
 I won’t stop on this slide because I’ll show my program later in more details.
\end_layout

\begin_layout Paragraph
Slide 5
\end_layout

\begin_layout Standard
Over now to the analysis.
 Here we have a 3D model of a building, which normally consists of several
 floors.
 Besides rooms and doors, buildings can have stairs, lifts, openings, and
 pillars.
 That’s the physical structure of a building.
\end_layout

\begin_layout Paragraph
Slide 6
\end_layout

\begin_layout Standard
And here’s another structure of that building — a graph.
 I defined this mathematical structure to make it possible to solve routing
 problem.
 I’ve already explained what it is like.
 This graph connects all major elements of the building.
 I will call them areas.
\end_layout

\begin_layout Paragraph
Slide 7
\end_layout

\begin_layout Standard
On this slide you can see the floor plan of the same building.
 Because of the easiness of storing and displaying the data I decided to
 use the floor plan but not the 3D model to represent the building.
\end_layout

\begin_layout Paragraph
Slide 8
\end_layout

\begin_layout Standard
Let’s recap the functions of my program.
 I needed to give users an opportunity to draw the floor plan and the graph,
 and connect the floors with the help of the stairs and the lifts.
 For end users I needed to implement a searching algorithm for different
 parts of buildings and a routing algorithm.
\end_layout

\begin_layout Paragraph
Slide 9
\end_layout

\begin_layout Standard
What does it mean: “drawing floor plans”? Firstly we need to outline the
 floors.
 Then we draw the areas.
 The program stores them in a tree to ease structuring, copying, and deleting.
 After outlining the areas we need to designate them (each area has its
 type and text fields).
\end_layout

\begin_layout Paragraph
Slide 10
\end_layout

\begin_layout Standard
The next step is drawing the graph.
 The biggest part of the graph is located on the floor level.
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
Snapping helps us to connect nodes of the graph with the doors.
 
\end_layout

\end_inset

 But different floors should be interconnected as well.
 Verticals (such as stairs and lifts) connect areas located on different
 floors.
 When we create a vertical the program adds a special edge between the doors
 of those areas.
\end_layout

\begin_layout Paragraph
Slide 11
\end_layout

\begin_layout Standard
Having set this information we can use it to find shortcuts.
 I split the task of finding routes between the areas to subtasks: finding
 all routes between all the doors of both areas.
 Because the doors are linked to the nodes we can solve this task by applying
 Dijkstra's algorithm to the graph.
 We are done.
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Paragraph
Slide 12
\end_layout

\begin_layout Standard
Let me sum up.
 What results have I achieved? I’ve done analysis work and created a guide
 to the buildings.
 Apart from developing plans for the BMSTU educational-laboratory building
 I’ve drawn plans of the main building of The Pushkin Museum of Fine Arts.
\end_layout

\begin_layout Paragraph
Program demonstration
\end_layout

\begin_layout Standard
Here is the program.
 First we open the building.
 Here it is.
 Let’s find the shortest way from our laboratory classroom #237 to the pancake
 house (I love this route because it’s vital for hungry students of our
 chair).
 We type the number and get the classroom displayed on the screen.
 We mark it as a starting point.
 Now I will type “blinnaya” to find it.
 Here it is.
 I’m pressing the button to find the route and...
 Theseus finds it on the floor plan.
 We can see other routes (and their parameters) on a special pane as well.
 We can see the timetable of the canteen.
\end_layout

\begin_layout Standard
Well, I’m afraid I’m running out of time.
 Do you know what happened after I finished this program? I presented it
 at a conference, won first place, and then applied to the university.
 I promoted my program as hard as I could.
 I wanted to install it in kiosks that now display the library’s site.
 But I faced terrible bureaucracy in our university.
 I presented this program at The Pushkin Museum of Fine Arts, and it was
 a great success.
 Unfortunately they ran out of money and refused to install the kiosks.
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
Years passed and Google released indoor navigation for big malls and airports.
 You can use your Android smartphone or PC to try it.
 But you cannot draw buildings in the Google.Maps.
 You depend on Google and it's will.
 For example, BMSTU is not detailed on Google.Maps.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
And one more thing.
 Just for fun I ported my program to Android.
 It wasn’t hard at all.
 I just spent one day to achieve that.
 Here it is.
\end_layout

\begin_layout Section
Questions
\end_layout

\begin_layout Standard
And now it’s time for your questions! You can ask me anything related to
 this program.
\end_layout

\end_body
\end_document
